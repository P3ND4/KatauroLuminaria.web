{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\shared\\components\\corousel\\corousel.html", "angular:jit:style:src\\app\\shared\\components\\corousel\\corousel.css", "src/app/shared/components/corousel/corousel.ts"],
  "sourcesContent": ["<div class=\"carousel-container\" [ngClass]=\"{'second': carouselType == 1, 'third': carouselType == 2 }\">\r\n    <div class=\"slides\">\r\n        <div class=\"slide\" *ngFor=\"let img of images; let i = index\" [ngClass]=\"{ 'visible': currentSlide === i }\">\r\n            <img src=\"{{img}}\" />\r\n        </div>\r\n        <div class=\"info-contet\" [ngClass]=\"{'second': carouselType == 1, 'third': carouselType == 2 }\">\r\n            <h2 class=\"car-text\" >{{data?.title}}</h2>\r\n            <p class=\"card-info\">{{data?.description}}</p>\r\n            <button class=\"button-chips\">\r\n                <label>Adquirir</label>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"navegacion\">\r\n        <label [ngStyle]=\"{'background-color': currentSlide === i ? '#fff' : '#717680'}\" *ngFor=\"let img of images; let i = index\" (click)=\"goToSlide(i)\">\r\n        </label>\r\n    </div>\r\n</div>", "/* src/app/shared/components/corousel/corousel.css */\n.carousel-container {\n  position: relative;\n  height: 560px;\n}\n.carousel-container.second {\n  height: 486px;\n  border-radius: 8px;\n  overflow: hidden;\n}\n.carousel-container input[type=radio] {\n  display: none;\n}\n.slide {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  transition: opacity 1s ease-in-out;\n}\n.slide img {\n  width: 100%;\n  height: 100%;\n}\n.slide.visible {\n  opacity: 1;\n  z-index: 1;\n}\n.navegacion {\n  display: flex;\n  position: absolute;\n  z-index: 10;\n  gap: 12px;\n  bottom: 16px;\n  left: calc(50% - 24px);\n}\n.info-contet {\n  position: absolute;\n  z-index: 2;\n  top: 116px;\n  left: 145px;\n  display: flex;\n  width: 610px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 32px;\n}\n.info-contet.second {\n  left: auto;\n  right: 145px;\n  top: 85.5px;\n  align-items: flex-end;\n}\n.info-contet.second h2,\n.info-contet.second p {\n  text-align: right;\n}\n.info-contet h2 {\n  color: var(--White, #FFF);\n  font-family: Montserrat;\n  font-size: 60px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 72px;\n  letter-spacing: -1.2px;\n  margin: 0px;\n}\n.info-contet p {\n  color: var(--White, #FFF);\n  font-family: Montserrat;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 30px;\n  margin: 0px;\n}\n.navegacion label {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: #717680;\n  cursor: pointer;\n  transition: background-color 0.5s ease;\n}\n.navegacion label:hover {\n  background-color: #bdc0c6 !important;\n}\n/*# sourceMappingURL=corousel.css.map */\n", "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { carouselDTO } from '../../models/carouselDTO';\r\n\r\n@Component({\r\n  selector: 'app-corousel',\r\n  imports: [CommonModule],\r\n  templateUrl: './corousel.html',\r\n  styleUrl: './corousel.css'\r\n})\r\nexport class Corousel implements OnInit, OnDestroy {\r\n  @Input() data?: carouselDTO\r\n  carouselType?: number\r\n  currentSlide: number = 0;\r\n  images: string[] = [\r\n    '/assets/Carousel_image.png',\r\n    '/assets/Carousel_image2.png',\r\n    '/assets/Carousel_image.png'\r\n  ];\r\n  autoSlideInterval: any;\r\n\r\n  ngOnDestroy(): void {\r\n    clearInterval(this.autoSlideInterval);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.data){\r\n      this.images = this.data.images\r\n    }\r\n    this.carouselType = this.data?.carousel\r\n    this.startAutoplay();\r\n  }\r\n\r\n  startAutoplay(): void {\r\n    this.autoSlideInterval = setInterval(() => this.nextSlide(), 4000); // Cambia de slide cada 4 segundos\r\n  }\r\n\r\n\r\n  goToSlide(index: number) {\r\n    this.currentSlide = index;\r\n    clearInterval(this.autoSlideInterval);\r\n    setTimeout(() => this.startAutoplay(), 10000); // espera 10s y sigue\r\n  }\r\n  nextSlide(): void {\r\n    this.currentSlide = (this.currentSlide + 1) % this.images.length;\r\n  }\r\n\r\n\r\n\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,iBAAA;AAAA;AAAA,IAAAD,oBAAA;AAAA;AAAA;;;ICUa;;;;;;;AAVb;AACA;AASO,IAAM,WAAN,MAAME,UAAQ;MACV;MACT;MACA,eAAuB;MACvB,SAAmB;QACjB;QACA;QACA;;MAEF;MAEA,cAAW;AACT,sBAAc,KAAK,iBAAiB;MACtC;MAEA,WAAQ;AACN,YAAG,KAAK,MAAK;AACX,eAAK,SAAS,KAAK,KAAK;QAC1B;AACA,aAAK,eAAe,KAAK,MAAM;AAC/B,aAAK,cAAa;MACpB;MAEA,gBAAa;AACX,aAAK,oBAAoB,YAAY,MAAM,KAAK,UAAS,GAAI,GAAI;MACnE;MAGA,UAAU,OAAa;AACrB,aAAK,eAAe;AACpB,sBAAc,KAAK,iBAAiB;AACpC,mBAAW,MAAM,KAAK,cAAa,GAAI,GAAK;MAC9C;MACA,YAAS;AACP,aAAK,gBAAgB,KAAK,eAAe,KAAK,KAAK,OAAO;MAC5D;;uBAlCC,MAAK,CAAA;;;AADK,eAAQ,WAAA;MANpB,UAAU;QACT,UAAU;QACV,SAAS,CAAC,YAAY;QACtB,UAAA;;OAED;OACY,QAAQ;;;",
  "names": ["corousel_default", "init_corousel", "Corousel"]
}
